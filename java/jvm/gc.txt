1.如何判断对象需要被回收：引用计数算法、可达性分析算法

引用计数算法：
给每个对象添加一个引用计数器，每当有一个地方引用它时，计数器就加1，当引用失效时，计数器就减1.任何时刻对象的计数器为0时，
对象就不可能再被使用。但该算法的缺点是很难解决对象之间相互循环引用的问题。

可达性分析算法：
以被称为GC Roots的对象作为根结点，从这些节点开始向下搜索，搜索所走过的路劲称为引用链，当一个对象不可达时就证明对象不可用，
即该对象不再任何引用链上。
在Java中可作为GC Roots的对象有以下四种：1）虚拟机栈（栈帧中的本地变量表）中引用的对象。2）方法区中静态属性应用的对象。
3）方法区中常量应用的对象。4）本地方法栈中JNI（Native方法）应用的对象。


2.Java中引用的四种类型：强引用(Strong Reference)，软引用(Soft Reference)，弱引用(Weak Reference)，幽灵引用(Phantom Reference).
强引用(Strong Reference):
强引用即为Java中普通的将对象实例赋给另一个变量、另一对象的属于或方法的内部变量。其特点是只要该引用还存在，垃圾


